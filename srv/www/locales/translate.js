var fs=require("fs"),template="./en/common.json",noTranslate="123";const util=require("util"),exec=util.promisify(require("child_process").exec);async function translate(t,e){let{stdout:s,stderr:a}=await exec("trans -b :"+e+' "'+t+'"');return s.replace("\n","").trimStart()}var countryCodes=["am am","az az","be be","bg bg","bn bn","bs bs","cy cy","et et","eu eu","fa fa","fy fy","ga ga","gd gd","gl gl","gu gu","ha ha","hr hr","ht ht","hy hy","id id","ig ig","is is","ka ka","kk kk","km km","kn kn","ku ku","ky ky","lb lb","lo lo","lt lt","lv lv","mg mg","mi mi","mk mk","ml ml","mn mn","mr mr","ms ms","mt mt","my my","ne ne","pa pa","ps ps","sd sd","si si","sk sk","sl sl","so so","sq sq","st st","sw sw","ta ta","te te","tg tg","th th","tl tl","tt tt","ur ur","uz uz","xh xh","yi yi","yo yo","zu zu","af af","ar ar","ca ca","zh_CN zh-CN","zh_TW zh-TW","cs cs","da da","nl nl","fi fi","fr fr","de de","el el","he he","hi hi","hu hu","it it","ja ja","ko ko","no no","pl pl","pt pt","pt_BR pt","ro ro","ru ru","sr sr","es es","sv sv","tr tr","uk uk","vi vi"],templateJson=JSON.parse(fs.readFileSync(template)),templateKeys=Object.keys(templateJson);async function templateTranslate(t){var e,s=!1;let a=t.split(" ")[1],l=t.split(" ")[0].replace("_","-"),n="./"+l+"/common.json";e=fs.existsSync(n)?JSON.parse(fs.readFileSync(n)):{};for await(let t of templateKeys)for await(let n of Object.keys(templateJson[t]))if(e[t]||(e[t]={}),e?.[t]?.[n])console.log("Translation exists: "+n+" for: "+l);else{var o;if(s=!0,templateJson[t][n].includes("{{")){let e=templateJson[t][n].split(" "),s=0;var r;for await(let t of e)t.includes("{{")&&(r=t,s++);if(1==s){let e=templateJson[t][n].replace(r,noTranslate);o=(await translate(e,a)).replace(noTranslate,r)}else console.log("Multi substitution strings not supported using english"),o=templateJson[t][n]}else o=await translate(templateJson[t][n],a);e[t][n]=o,console.log("Translated String: "+templateJson[t][n]+" for: "+l+" Result: "+o)}return[e,s]}async function main(){countryCodes.forEach((async function(t){let e=t.split(" ")[0].replace("_","-"),s=await templateTranslate(t),a=s[0];s[1]&&(fs.existsSync("./"+e)||(console.log("Creating Directory: ./"+e),fs.mkdirSync("./"+e)),console.log("Updating: ./"+e+"/common.json"),fs.writeFileSync("./"+e+"/common.json",JSON.stringify(a,null,"\t")))}))}main();